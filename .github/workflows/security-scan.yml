name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better scanning

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        language: [ 'javascript', 'typescript', 'python' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  api-key-patterns:
    name: Custom API Key Pattern Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for hardcoded Firebase API keys
        run: |
          if grep -r "AIzaSy[0-9A-Za-z_-]\{33\}" --include="*.js" --include="*.ts" --include="*.jsx" --include="*.tsx" --exclude-dir=node_modules --exclude-dir=.git --exclude="*.example" .; then
            echo "::error::Hardcoded Firebase API keys found!"
            exit 1
          fi

      - name: Check for OpenAI keys
        run: |
          if grep -r "sk-[a-zA-Z0-9]\{48\}" --include="*.js" --include="*.ts" --include="*.jsx" --include="*.tsx" --include="*.py" --exclude-dir=node_modules --exclude-dir=.git --exclude="*.example" .; then
            echo "::error::Hardcoded OpenAI API keys found!"
            exit 1
          fi

      - name: Check for .env files
        run: |
          if find . -name ".env" -o -name ".env.local" -o -name ".env.production" | grep -v ".example" | grep -v "node_modules" | grep -v ".git"; then
            echo "::error::Found .env files that might contain secrets!"
            exit 1
          fi